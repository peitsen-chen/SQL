SELECT：挑選、選取
SELECT a FROM b ：從b中挑選a物件
SELECT a,c FROM b：從b中挑選a,c物件
SELECT * FROM b：從b中挑選所有物件

Distinct：挑出非重複資料
Select distinct country from film：用於film表中有很多重複的country的資料->結果只會挑出非重複資料(重複資料只會出現一次)

Count(*)：計算film表中有幾列(row)資料
Select count(*) from film：計算film表中有幾列(row)資料->若是count要選所有*後面一定要()，而select不用
Select count(country) from film：計算film表中country有幾列(row)非缺失值資料
Select count(distinct country) from film：計算film表中country有幾列(row)非重複資料

Where：同英文子句的意思
select*from films where release_year=2016：Get all details for all films released in 2016 
select title,release_year from films where release_year>2000：Get the title and release year of films released after 2000
select * from films where language = 'French'：Get all details for all French language films

where…and…：選取同時符合兩種期況的資料
Select title,release_year from films where language='Spanish' and release_year<2000：Get the title and release year for all Spanish language films released before 2000

Or
請注意，您需要為每個OR條件指定列，因此以下內容無效；
結合AND和時OR，請確保將各個子句括在括號中，否則依照sql的優先原則，會無法達預期結果，如：
select * from films where (language='French' or language='Spanish')  and (release_year<2000 and release_year>=1990)



between
between是包含性的，這意味著開始和結束值都包含在結果中，如：
查詢來獲取1994年至2000年之間發行的所有電影的標題
<法一>
SELECT title
FROM films
WHERE release_year >= 1994
AND release_year <= 2000
<法二>
SELECT title
FROM films
WHERE release_year
BETWEEN 1994 AND 2000

In：同時指定多個or指令時，可用in()替代
<法一>
SELECT name
FROM kids
WHERE age = 2
OR age = 4
OR age = 6
OR age = 8
OR age = 10
<法二>
SELECT name
FROM kids
WHERE age IN (2, 4, 6, 8, 10)
Get the title and release year of all films released in 1990 or 2000 that were longer than two hours. Remember, duration is in minutes!select title,release_year from films where release_year in(1990,2000) and duration>120

Null：缺失值
select title from films where budget is null：獲取沒有預算的每部電影的標題

like：where只能選取特定文字，如只能選取where language='spanish' ->只能找字串完全= Spanish，然而通常找資料時不會完全知道所要找的全部字串拼音，而會知道類似拼音；但like可以選差不多字串，%通配符匹配零個，一個或多個文本字符，該_通配符將匹配單個字符>>因此可在where子句中加like來選取類似字串
NOT LIKE：find records that don't match the pattern you specify.
select name from people where name like 'B%'：獲取以“ B”開頭的所有人的名字。您需要的模式是'B%'
select name from people where name like '_r%'：獲取姓名中第二個字母為“ r”的人的姓名。您需要的模式是'_r%'>>_r中的_代表第一字母可以為任何，%代表可以有0、1、多個字元
select name from people where name not like 'A%'：Get the names of people whose names don't start with A. The pattern you need is 'A%'

sum()：加總  avg()：平均
select sum(duration) from films：Use the sum function to get the total duration of all films

+：加 -：減 *：乘 /：除
但4/3 跑出的值為1，因為sql假定整數除以整數跑出的值為整數，若要跑出小數點：4.0/3.0 跑出的點為1.333
>>.0：代表讓他的值出現小數

order by：原則上SQL默認是升序，若要降序，後面要加DESC，如：
以release_year降序排序
>>order by 一定要在from後面，若要按照字母排序，order by後面寫要選取的東西即可
如：SELECT name FROM people ORDER BY name
>>如果同時依照多種方式排序，如同時按title,release_year,gross
->則會先以寫在前面的開始排
如: order by title, release_year,gross，會先以title排，若titile有重複的(如：都叫aaa)，會再以release_year排

GROUP BY允許您按一個或多個列對結果進行分組，必放在from後面
select release_year,avg(*) from films group by realease_year：獲取按發行年份分組的發行年份和所有電影的平均時長
SELECT release_year, country, min(gross)  
FROM films  
GROUP BY release_year, country   >先以release_year分組，再以Country分組
ORDER BY country,release_year    >先以Countryrelease_year分組，再以release_year分組
在聚合函數(group by、order by)中，不可同時使用where，而要使用having
SELECT release_year
FROM films
GROUP BY release_year
WHERE COUNT(title) > 10
->>>結果:error
Select release_year from films 
group by release_year 
having release_year>1990
>>>having要放在group by後面


